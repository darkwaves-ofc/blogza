model User {
  id                    String                 @id @default(auto()) @map("_id") @db.ObjectId
  name                  String?
  email                 String                 @unique
  emailVerified         DateTime?
  images                UserImage[]
  password              String?
  accounts              Account?
  isTwoFactorEnabled    Boolean                @default(false)
  twoFactorConfirmation TwoFactorConfirmation?
  UserPreferences       UserPreferences?
  role                  role?                  @relation(fields: [roleId], references: [id], onDelete: SetNull)
  roleId                String?                @db.ObjectId
  system                Boolean                @default(false)
  Session               Session[]
  LoginAttempt          LoginAttempt[]
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  viewedPopups          UserPopupView[]
  blogs                 Blog[]
}

model UserImage {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String    @unique
  cdnId     String?   @unique
  name      String?
  extension String?
  private   Boolean
  size      Int?
  verified  DateTime?
}

model UserPreferences {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @unique @db.ObjectId
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  language      String?  @default("en")
  currency      String?  @default("USD")
  communication String[] @default(["email"])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
